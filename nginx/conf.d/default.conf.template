upstream app_backend {

    # Primary server (based on ACTIVE_POOL)
    server app_${ACTIVE_POOL}:${PORT} max_fails=2 fail_timeout=5s;
    
    # Backup servers (automatically switches on primary failure)
    server app_blue:${PORT} backup max_fails=2 fail_timeout=5s;
    server app_green:${PORT} backup max_fails=2 fail_timeout=5s;
}

server {
    listen 80;
    server_name _;

    # Tight timeouts for fast failover detection
    proxy_connect_timeout 2s;
    proxy_send_timeout 2s;
    proxy_read_timeout 2s;

    # Retry configuration
    proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 10s;

    location / {
        proxy_pass http://app_backend;
        
        # Preserve original headers from upstream
        proxy_pass_request_headers on;
        
        # Forward client information
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Don't buffer responses (for real-time failover)
        proxy_buffering off;
        
        # Preserve upstream headers (X-App-Pool, X-Release-Id)
        proxy_pass_header X-App-Pool;
        proxy_pass_header X-Release-Id;
    }

    # Health check endpoint passthrough
    location /healthz {
        proxy_pass http://app_backend/healthz;
        proxy_pass_request_headers on;
        access_log off;
    }

    # Version endpoint passthrough
    location /version {
        proxy_pass http://app_backend/version;
        proxy_pass_request_headers on;
    }

    # Chaos endpoints passthrough
    location /chaos {
        proxy_pass http://app_backend;
        proxy_pass_request_headers on;
    }
}
